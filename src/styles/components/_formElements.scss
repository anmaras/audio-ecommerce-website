@use '../utils' as *;

$border: rem(2) solid var(--normal-grey);
$border-active: rem(2) solid var(--raw-sienna);
$border-error: rem(2) solid red;
$border-radius: rem(10);
$padding: rem(16);

@mixin inputPadding {
  padding-inline: rem(16);
  padding-block: rem(13);
}

.form {
  margin-top: rem(32);
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  gap: rem(32);

  &__controls {
    display: grid;
    grid-template-columns: 1fr 1fr;
    background-color: transparent;
  }

  &__controls--radio,
  &__input {
    border: 0;
    border-radius: $border-radius;
    outline: $border;
    transition: outline 0.5s;
    caret-color: var(--raw-sienna);

    &:focus:not(input[type='radio']) {
      outline: $border-active;
    }
  }

  &__label--text {
    margin-bottom: rem(3);
  }

  &__label--error {
    color: red;
  }

  &__controls--radio {
    display: flex;
    align-items: center;
    gap: rem(16);
    align-self: flex-end;
    @include inputPadding;
    &:focus-within {
      outline: $border-active;
    }
  }

  &__input {
    grid-column: 1/-1;
    background-color: transparent;
    @include inputPadding;
  }

  &__input--error {
    outline: $border-error;
  }

  &__input--radio {
    appearance: none;
    margin: 0;
    padding: 0;
    border: 0;
    width: rem(18);
    outline: $border;
    border-radius: 50%;
    aspect-ratio: 1;
    cursor: pointer;
    &:checked {
      background-color: var(--raw-sienna);
      background: radial-gradient(var(--raw-sienna) 30%, var(--white) 40%);
    }
  }

  &__warning {
    justify-self: flex-end;
  }
}
