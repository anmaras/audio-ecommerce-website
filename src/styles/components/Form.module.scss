@use '../utils' as *;
@use '../globals/' as *;

$border: rem(2) solid var(--normal-grey);
$border-active: rem(2) solid var(--raw-sienna);
$border-error: rem(2) solid red;
$border-radius: rem(10);
$padding: rem(16);

@mixin inputPadding {
  padding-inline: rem(16);
  padding-block: rem(13);
}

.checkout {
  background-color: var(--white);
  @include width-center(rem(1220), rem(48));

  padding-block: rem(35);
  padding-inline: rem(25);

  @include breakpoint(medium) {
    @include width-center(rem(1220), rem(64));
  }

  &__title {
    margin-bottom: rem(48);
  }

  &__form {
    display: grid;
  }

  &__formControlsWrapper {
    display: grid;
    gap: rem(24);
    margin-bottom: rem(40);
  }

  &__formControls:not(&__formControls:has(input[type='radio'])) {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: repeat(2, auto);
    align-items: center;

    label {
      grid-column: 1/2;
      cursor: pointer;
    }

    input {
      cursor: pointer;

      grid-column: 1/-1;
      padding: rem(16);
      border-radius: var(--border-radius);
      border: thin solid var(--normal-grey);
      caret-color: var(--raw-sienna);

      &:focus {
        outline-color: var(--raw-sienna);
      }
    }
    p {
      justify-self: end;
      &::after {
        content: '!';
      }
    }
  }

  &__formControls:has(input[type='radio']) {
    padding: rem(16);
    display: inline;
    border-radius: var(--border-radius);
    border: thin solid var(--normal-grey);
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: rem(16);
    /* need fixing on focus within */
    &:focus-within {
      outline: 2px solid var(--raw-sienna);
    }

    label {
      cursor: pointer;
    }

    input {
      appearance: none;
      margin: 0;
      padding: 0;
      width: rem(20);
      border: $border;
      border-radius: 50%;
      aspect-ratio: 1;
      cursor: pointer;

      &:checked {
        background-color: var(--raw-sienna);
        background: radial-gradient(var(--raw-sienna) 40%, var(--white) 50%);
      }
    }
  }

  &__subtitle {
    margin-bottom: rem(28);
  }
}

.form {
  // margin-top: rem(32);
  // display: grid;
  // background-color: var(--white);
  // grid-template-columns: 1fr 1fr;
  // align-items: center;
  // gap: rem(32);

  // &__controls {
  //   display: grid;
  //   grid-template-columns: 1fr 1fr;
  //   background-color: transparent;
  // }

  // &__controls--radio,
  // &__input {
  //   border: 0;
  //   border-radius: $border-radius;
  //   outline: $border;
  //   transition: outline 0.5s;
  //   caret-color: var(--raw-sienna);

  //   &:focus:not(input[type='radio']) {
  //     outline: $border-active;
  //   }
  // }

  // &__label--text {
  //   margin-bottom: rem(3);
  // }

  // &__label--error {
  //   color: red;
  // }

  // &__controls--radio {
  //   display: flex;
  //   align-items: center;
  //   gap: rem(16);
  //   align-self: flex-end;
  //   @include inputPadding;
  //   &:focus-within {
  //     outline: $border-active;
  //   }
  // }

  // &__input {
  //   grid-column: 1/-1;
  //   background-color: transparent;
  //   @include inputPadding;
  // }

  // &__input--error {
  //   outline: $border-error;
  // }

  // &__input--radio {
  //   appearance: none;
  //   margin: 0;
  //   padding: 0;
  //   border: 0;
  //   width: rem(18);
  //   outline: $border;
  //   border-radius: 50%;
  //   aspect-ratio: 1;
  //   cursor: pointer;
  //   &:checked {
  //     background-color: var(--raw-sienna);
  //     background: radial-gradient(var(--raw-sienna) 30%, var(--white) 40%);
  //   }
  // }

  // &__warning {
  //   justify-self: flex-end;
  // }
}
